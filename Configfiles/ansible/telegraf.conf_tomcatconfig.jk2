# Gather metrics from the Tomcat server status page.
[[inputs.tomcat]]
  ## URL of the Tomcat server status
  url = "http://{{ HOSTDBIP.stdout }}:8080/manager/status/all?XML=true"

  ## HTTP Basic Auth Credentials
#  username = "tommy"
#  password = "s3cret"

  ## Request timeout
  # timeout = "5s"

  ## Optional SSL Config
  # ssl_ca = "/etc/telegraf/ca.pem"
  # ssl_cert = "/etc/telegraf/cert.pem"
  # ssl_key = "/etc/telegraf/key.pem"
  ## Use SSL but skip chain & host verification
  # insecure_skip_verify = false
  
#NodeJS Application Metrics
# Statsd Server
#[[inputs.statsd]]
 # Address and port to host UDP listener on
# service_address = .localhost:8125.
 # Delete gauges every interval (default=false)
# delete_gauges = true
 # Delete counters every interval (default=false)
# delete_counters = true
 # Delete sets every interval (default=false)
# delete_sets = false
 # Delete timings & histograms every interval (default=true)
# delete_timings = true
 # Percentiles to calculate for timing & histogram stats
# percentiles = [90]

# convert measurement names, "." to "_" and "-" to "__"
# convert_names = false

#templates = [
# "* measurement.field"
# ]

# Number of UDP messages allowed to queue up, once filled,
 # the statsd server will start dropping packets
# allowed_pending_messages = 10000

# Number of timing/histogram values to track per-measurement in the
 # calculation of percentiles. Raising this limit increases the accuracy
 # of percentiles but also increases the memory usage and cpu time.
# percentile_limit = 1000

# UDP packet size for the server to listen for. This will depend on the size
 # of the packets that the client is sending, which is usually 1500 bytes.
# udp_packet_size = 1500

#[[inputs.exec]]
#    interval = "60s"
#    commands = ["/usr/bin/sudo /opt/telegraf_jmx/telegraf_jmx.sh && /bin/cat /tmp/telegraf_jmx.out"]
#    timeout = "50s"
#    data_format = "influx"
